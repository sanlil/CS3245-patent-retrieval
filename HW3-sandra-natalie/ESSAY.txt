1. In this assignment, we didn't ask you to support phrasal queries, which is a feature that is typically supported in web search engines. Describe how you would support phrasal search in conjunction with the VSM model. A sketch of the algorithm is sufficient. (For those of you who like a challenge, please go ahead and implement this feature in your submission but clearly demarcate it in your code and allow this feature to be turned on or off using the command line switch "-x" (where "-x" means to turn on the extended processing of phrasal queries). We will give a small bonus to submissions that achieve this functionality correctly).

The difference between our queries and a phrasal query feature is that we don't just consider a bag of words but an ordered sequence of words. In order to retrieve them we also need to keep track of the position (by using a positional index) of each term in a document. 
We now want to find all documents in which the whole phrase occurs, so all query terms in order. Afterwards we check them for the shortest distance between the positions of the single terms. The shorter the distance, the better the result. We should start the check with the least common word in the phrase.
    
2. Describe how your search engine reacts to long documents and long queries as compared to short documents and queries. Is the normalization you use sufficient to address the problems (see Section 6.4.4 for a hint)? In your judgement, is the ltc.lnc scheme (n.b., not the ranking scheme you were asked to implement) sufficient for retrieving documents from the Reuters-21578 collection?

In general, normalization by the Euclidean length of the vector eliminates the information about the lenght of the documents. But you can still recognize some differences: If we have a longer document we will have higher tfs and more words in total which results in different relative weights of terms compared to a single short document.
Consequently, the chosen normalization is not sufficient.

About the ltc.lnc:
To use the ldf on the documents instead of the query would mean that we would have to look at what terms that are commonly used in queries instead of in the documents. With the Reuters library we don't have that information and could therefore not perform this type of scheme.

3. Do you think zone or field parametric indices would be useful for practical search in the Reuters collection? Note: the Reuters collection does have metadata for each article but the quality of the metadata is not uniform, nor are the metadata classifications uniformly applied (some documents have it, some don't). Hint: for the next Homework #4, we will be using field metadata, so if you want to base Homework #4 on your Homework #3, you're welcomed to start support of this early (although no extra credit will be given if it's right).

Yes, it would be good to get these types of parameters (that not necessarily occur in the document itself) like for example the author or the year or magazine it was published, so that you also would be able to search for that kind of terms. 
